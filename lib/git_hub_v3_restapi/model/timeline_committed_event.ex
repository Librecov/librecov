# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule GitHubV3RESTAPI.Model.TimelineCommittedEvent do
  @moduledoc """
  Timeline Committed Event
  """

  @derive [Poison.Encoder]
  defstruct [
    :event,
    :sha,
    :node_id,
    :url,
    :author,
    :committer,
    :message,
    :tree,
    :parents,
    :verification,
    :html_url
  ]

  @type t :: %__MODULE__{
          :event => String.t() | nil,
          :sha => String.t(),
          :node_id => String.t(),
          :url => String.t(),
          :author => GitHubV3RESTAPI.Model.GitCommitAuthor.t(),
          :committer => GitHubV3RESTAPI.Model.GitCommitAuthor.t(),
          :message => String.t(),
          :tree => GitHubV3RESTAPI.Model.GitCommitTree.t(),
          :parents => [GitHubV3RESTAPI.Model.GitCommitParents.t()],
          :verification => GitHubV3RESTAPI.Model.GitCommitVerification.t(),
          :html_url => String.t()
        }
end

defimpl Poison.Decoder, for: GitHubV3RESTAPI.Model.TimelineCommittedEvent do
  import GitHubV3RESTAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:author, :struct, GitHubV3RESTAPI.Model.GitCommitAuthor, options)
    |> deserialize(:committer, :struct, GitHubV3RESTAPI.Model.GitCommitAuthor, options)
    |> deserialize(:tree, :struct, GitHubV3RESTAPI.Model.GitCommitTree, options)
    |> deserialize(:parents, :list, GitHubV3RESTAPI.Model.GitCommitParents, options)
    |> deserialize(:verification, :struct, GitHubV3RESTAPI.Model.GitCommitVerification, options)
  end
end
