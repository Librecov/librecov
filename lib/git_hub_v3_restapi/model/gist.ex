# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule GitHubV3RESTAPI.Model.Gist do
  @moduledoc """
  Gist
  """

  @derive [Poison.Encoder]
  defstruct [
    :url,
    :forks_url,
    :commits_url,
    :id,
    :node_id,
    :git_pull_url,
    :git_push_url,
    :html_url,
    :files,
    :public,
    :created_at,
    :updated_at,
    :description,
    :comments,
    :user,
    :comments_url,
    :owner,
    :truncated,
    :forks,
    :history
  ]

  @type t :: %__MODULE__{
          :url => String.t(),
          :forks_url => String.t(),
          :commits_url => String.t(),
          :id => String.t(),
          :node_id => String.t(),
          :git_pull_url => String.t(),
          :git_push_url => String.t(),
          :html_url => String.t(),
          :files => %{optional(String.t()) => GitHubV3RESTAPI.Model.BaseGistFiles.t()},
          :public => boolean(),
          :created_at => DateTime.t(),
          :updated_at => DateTime.t(),
          :description => String.t() | nil,
          :comments => integer(),
          :user => SimpleUser | nil,
          :comments_url => String.t(),
          :owner => SimpleUser | nil,
          :truncated => boolean() | nil,
          :forks => [AnyType] | nil,
          :history => [AnyType] | nil
        }
end

defimpl Poison.Decoder, for: GitHubV3RESTAPI.Model.Gist do
  import GitHubV3RESTAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:files, :map, GitHubV3RESTAPI.Model.BaseGistFiles, options)
    |> deserialize(:user, :struct, GitHubV3RESTAPI.Model.SimpleUser, options)
    |> deserialize(:owner, :struct, GitHubV3RESTAPI.Model.SimpleUser, options)
    |> deserialize(:forks, :list, GitHubV3RESTAPI.Model.AnyType, options)
    |> deserialize(:history, :list, GitHubV3RESTAPI.Model.AnyType, options)
  end
end
