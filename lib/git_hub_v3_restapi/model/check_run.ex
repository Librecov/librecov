# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule GitHubV3RESTAPI.Model.CheckRun do
  @moduledoc """
  A check performed on the code of a given code change
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :head_sha,
    :node_id,
    :external_id,
    :url,
    :html_url,
    :details_url,
    :status,
    :conclusion,
    :started_at,
    :completed_at,
    :output,
    :name,
    :check_suite,
    :app,
    :pull_requests,
    :deployment
  ]

  @type t :: %__MODULE__{
          :id => integer(),
          :head_sha => String.t(),
          :node_id => String.t(),
          :external_id => String.t() | nil,
          :url => String.t(),
          :html_url => String.t() | nil,
          :details_url => String.t() | nil,
          :status => String.t(),
          :conclusion => String.t() | nil,
          :started_at => DateTime.t() | nil,
          :completed_at => DateTime.t() | nil,
          :output => GitHubV3RESTAPI.Model.CheckRunOutput.t(),
          :name => String.t(),
          :check_suite => GitHubV3RESTAPI.Model.CheckRunCheckSuite.t() | nil,
          :app => Integration | nil,
          :pull_requests => [GitHubV3RESTAPI.Model.PullRequestMinimal.t()],
          :deployment => GitHubV3RESTAPI.Model.DeploymentSimple.t() | nil
        }
end

defimpl Poison.Decoder, for: GitHubV3RESTAPI.Model.CheckRun do
  import GitHubV3RESTAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:output, :struct, GitHubV3RESTAPI.Model.CheckRunOutput, options)
    |> deserialize(:check_suite, :struct, GitHubV3RESTAPI.Model.CheckRunCheckSuite, options)
    |> deserialize(:app, :struct, GitHubV3RESTAPI.Model.Integration, options)
    |> deserialize(:pull_requests, :list, GitHubV3RESTAPI.Model.PullRequestMinimal, options)
    |> deserialize(:deployment, :struct, GitHubV3RESTAPI.Model.DeploymentSimple, options)
  end
end
