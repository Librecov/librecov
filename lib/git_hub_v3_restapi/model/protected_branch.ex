# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule GitHubV3RESTAPI.Model.ProtectedBranch do
  @moduledoc """
  Branch protections protect branches
  """

  @derive [Poison.Encoder]
  defstruct [
    :url,
    :required_status_checks,
    :required_pull_request_reviews,
    :required_signatures,
    :enforce_admins,
    :required_linear_history,
    :allow_force_pushes,
    :allow_deletions,
    :restrictions,
    :required_conversation_resolution
  ]

  @type t :: %__MODULE__{
          :url => String.t(),
          :required_status_checks => GitHubV3RESTAPI.Model.StatusCheckPolicy.t() | nil,
          :required_pull_request_reviews =>
            GitHubV3RESTAPI.Model.ProtectedBranchRequiredPullRequestReviews.t() | nil,
          :required_signatures =>
            GitHubV3RESTAPI.Model.BranchProtectionRequiredSignatures.t() | nil,
          :enforce_admins => GitHubV3RESTAPI.Model.ProtectedBranchEnforceAdmins.t() | nil,
          :required_linear_history =>
            GitHubV3RESTAPI.Model.ProtectedBranchRequiredLinearHistory.t() | nil,
          :allow_force_pushes =>
            GitHubV3RESTAPI.Model.ProtectedBranchRequiredLinearHistory.t() | nil,
          :allow_deletions =>
            GitHubV3RESTAPI.Model.ProtectedBranchRequiredLinearHistory.t() | nil,
          :restrictions => GitHubV3RESTAPI.Model.BranchRestrictionPolicy.t() | nil,
          :required_conversation_resolution =>
            GitHubV3RESTAPI.Model.BranchProtectionRequiredLinearHistory.t() | nil
        }
end

defimpl Poison.Decoder, for: GitHubV3RESTAPI.Model.ProtectedBranch do
  import GitHubV3RESTAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(
      :required_status_checks,
      :struct,
      GitHubV3RESTAPI.Model.StatusCheckPolicy,
      options
    )
    |> deserialize(
      :required_pull_request_reviews,
      :struct,
      GitHubV3RESTAPI.Model.ProtectedBranchRequiredPullRequestReviews,
      options
    )
    |> deserialize(
      :required_signatures,
      :struct,
      GitHubV3RESTAPI.Model.BranchProtectionRequiredSignatures,
      options
    )
    |> deserialize(
      :enforce_admins,
      :struct,
      GitHubV3RESTAPI.Model.ProtectedBranchEnforceAdmins,
      options
    )
    |> deserialize(
      :required_linear_history,
      :struct,
      GitHubV3RESTAPI.Model.ProtectedBranchRequiredLinearHistory,
      options
    )
    |> deserialize(
      :allow_force_pushes,
      :struct,
      GitHubV3RESTAPI.Model.ProtectedBranchRequiredLinearHistory,
      options
    )
    |> deserialize(
      :allow_deletions,
      :struct,
      GitHubV3RESTAPI.Model.ProtectedBranchRequiredLinearHistory,
      options
    )
    |> deserialize(:restrictions, :struct, GitHubV3RESTAPI.Model.BranchRestrictionPolicy, options)
    |> deserialize(
      :required_conversation_resolution,
      :struct,
      GitHubV3RESTAPI.Model.BranchProtectionRequiredLinearHistory,
      options
    )
  end
end
