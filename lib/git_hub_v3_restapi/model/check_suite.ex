# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule GitHubV3RESTAPI.Model.CheckSuite do
  @moduledoc """
  A suite of checks performed on the code of a given code change
  """

  @derive [Poison.Encoder]
  defstruct [
    :id,
    :node_id,
    :head_branch,
    :head_sha,
    :status,
    :conclusion,
    :url,
    :before,
    :after,
    :pull_requests,
    :app,
    :repository,
    :created_at,
    :updated_at,
    :head_commit,
    :latest_check_runs_count,
    :check_runs_url
  ]

  @type t :: %__MODULE__{
          :id => integer(),
          :node_id => String.t(),
          :head_branch => String.t() | nil,
          :head_sha => String.t(),
          :status => String.t() | nil,
          :conclusion => String.t() | nil,
          :url => String.t() | nil,
          :before => String.t() | nil,
          :after => String.t() | nil,
          :pull_requests => [GitHubV3RESTAPI.Model.PullRequestMinimal.t()] | nil,
          :app => Integration | nil,
          :repository => GitHubV3RESTAPI.Model.MinimalRepository.t(),
          :created_at => DateTime.t() | nil,
          :updated_at => DateTime.t() | nil,
          :head_commit => GitHubV3RESTAPI.Model.SimpleCommit.t(),
          :latest_check_runs_count => integer(),
          :check_runs_url => String.t()
        }
end

defimpl Poison.Decoder, for: GitHubV3RESTAPI.Model.CheckSuite do
  import GitHubV3RESTAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:pull_requests, :list, GitHubV3RESTAPI.Model.PullRequestMinimal, options)
    |> deserialize(:app, :struct, GitHubV3RESTAPI.Model.Integration, options)
    |> deserialize(:repository, :struct, GitHubV3RESTAPI.Model.MinimalRepository, options)
    |> deserialize(:head_commit, :struct, GitHubV3RESTAPI.Model.SimpleCommit, options)
  end
end
