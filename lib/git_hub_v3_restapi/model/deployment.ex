# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule GitHubV3RESTAPI.Model.Deployment do
  @moduledoc """
  A request for a specific ref(branch,sha,tag) to be deployed
  """

  @derive [Poison.Encoder]
  defstruct [
    :url,
    :id,
    :node_id,
    :sha,
    :ref,
    :task,
    :payload,
    :original_environment,
    :environment,
    :description,
    :creator,
    :created_at,
    :updated_at,
    :statuses_url,
    :repository_url,
    :transient_environment,
    :production_environment,
    :performed_via_github_app
  ]

  @type t :: %__MODULE__{
          :url => String.t(),
          :id => integer(),
          :node_id => String.t(),
          :sha => String.t(),
          :ref => String.t(),
          :task => String.t(),
          :payload => OneOfmapstring,
          :original_environment => String.t() | nil,
          :environment => String.t(),
          :description => String.t() | nil,
          :creator => SimpleUser | nil,
          :created_at => DateTime.t(),
          :updated_at => DateTime.t(),
          :statuses_url => String.t(),
          :repository_url => String.t(),
          :transient_environment => boolean() | nil,
          :production_environment => boolean() | nil,
          :performed_via_github_app => Integration | nil
        }
end

defimpl Poison.Decoder, for: GitHubV3RESTAPI.Model.Deployment do
  import GitHubV3RESTAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:payload, :struct, GitHubV3RESTAPI.Model.OneOfmapstring, options)
    |> deserialize(:creator, :struct, GitHubV3RESTAPI.Model.SimpleUser, options)
    |> deserialize(:performed_via_github_app, :struct, GitHubV3RESTAPI.Model.Integration, options)
  end
end
