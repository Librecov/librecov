# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule GitHubV3RESTAPI.Model.ScimUser do
  @moduledoc """
  SCIM /Users provisioning endpoints
  """

  @derive [Poison.Encoder]
  defstruct [
    :schemas,
    :id,
    :externalId,
    :userName,
    :displayName,
    :name,
    :emails,
    :active,
    :meta,
    :organization_id,
    :operations,
    :groups
  ]

  @type t :: %__MODULE__{
          :schemas => [String.t()],
          :id => String.t(),
          :externalId => String.t() | nil,
          :userName => String.t() | nil,
          :displayName => String.t() | nil,
          :name => GitHubV3RESTAPI.Model.ScimUserName.t(),
          :emails => [GitHubV3RESTAPI.Model.ScimUserEmails.t()],
          :active => boolean(),
          :meta => GitHubV3RESTAPI.Model.ScimUserMeta.t(),
          :organization_id => integer() | nil,
          :operations => [GitHubV3RESTAPI.Model.ScimUserOperations.t()] | nil,
          :groups => [map()] | nil
        }
end

defimpl Poison.Decoder, for: GitHubV3RESTAPI.Model.ScimUser do
  import GitHubV3RESTAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:name, :struct, GitHubV3RESTAPI.Model.ScimUserName, options)
    |> deserialize(:emails, :list, GitHubV3RESTAPI.Model.ScimUserEmails, options)
    |> deserialize(:meta, :struct, GitHubV3RESTAPI.Model.ScimUserMeta, options)
    |> deserialize(:operations, :list, GitHubV3RESTAPI.Model.ScimUserOperations, options)
  end
end
